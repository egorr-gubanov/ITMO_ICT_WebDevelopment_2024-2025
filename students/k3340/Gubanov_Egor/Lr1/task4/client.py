import socket
import threading
import sys
import time

HOST = '127.0.0.1'
PORT = 8004
ENCODING = 'utf-8'

def recv_messages(sock, stop_event):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        while not stop_event.is_set():
            try:
                data = sock.recv(4096)
                if not data:
                    print("\n–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ —Å–µ—Ä–≤–µ—Ä–æ–º")
                    break
                sys.stdout.write(data.decode(ENCODING))
                sys.stdout.flush()
            except socket.error as e:
                if stop_event.is_set():
                    break
                print(f"\n–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {e}")
                break
    except Exception as e:
        if not stop_event.is_set():
            print(f"\n–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {e}")

def main():
    print("–ú–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç")
    print("=" * 30)
    
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((HOST, PORT))
        print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É {HOST}:{PORT}")

        stop_event = threading.Event()
        recv_thread = threading.Thread(target=recv_messages, args=(s, stop_event), daemon=True)
        recv_thread.start()

        name = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: ").strip()
        if not name:
            name = "–ê–Ω–æ–Ω–∏–º–Ω—ã–π"
        s.sendall((name + "\n").encode(ENCODING))

        print(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}! –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏–ª–∏ /quit –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
        print("-" * 50)
        
        try:
            while True:
                msg = input()
                if msg.strip().lower() == "/quit":
                    s.sendall(msg.encode(ENCODING))
                    break
                s.sendall(msg.encode(ENCODING))
        except KeyboardInterrupt:
            print("\n–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ...")
        finally:
            stop_event.set()
            print("üëã –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —á–∞—Ç–∞...")
            time.sleep(0.1)

if __name__ == '__main__':
    main()
